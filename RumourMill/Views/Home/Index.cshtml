@{
    /**/

    ViewBag.Title = "The Grapevine";
}
@using Microsoft.AspNet.Identity

@functions
{
    static string GetPrettyDate(DateTime d)
    {
        // 1.
        // Get time span elapsed since the date.
        TimeSpan s = DateTime.Now.Subtract(d);

        // 2.
        // Get total number of days elapsed.
        int dayDiff = (int)s.TotalDays;

        // 3.
        // Get total number of seconds elapsed.
        int secDiff = (int)s.TotalSeconds;

        // 4.
        // Don't allow out of range values.
        if (dayDiff < 0 || dayDiff >= 31)
        {
            return null;
        }

        // 5.
        // Handle same-day times.
        if (dayDiff == 0)
        {
            // A.
            // Less than one minute ago.
            if (secDiff < 60)
            {
                return "Just now";
            }
            // B.
            // Less than 2 minutes ago.
            if (secDiff < 120)
            {
                return "1 minute ago";
            }
            // C.
            // Less than one hour ago.
            if (secDiff < 3600)
            {
                return string.Format("{0} minutes ago",
                    Math.Floor((double)secDiff / 60));
            }
            // D.
            // Less than 2 hours ago.
            if (secDiff < 7200)
            {
                return "1 hour ago";
            }
            // E.
            // Less than one day ago.
            if (secDiff < 86400)
            {
                return string.Format("{0} hours ago",
                    Math.Floor((double)secDiff / 3600));
            }
        }
        // 6.
        // Handle previous days.
        if (dayDiff == 1)
        {
            return "Yesterday";
        }
        if (dayDiff < 7)
        {
            return string.Format("{0} days ago",
                dayDiff);
        }
        if (dayDiff < 31)
        {
            return string.Format("{0} weeks ago",
                Math.Ceiling((double)dayDiff / 7));
        }
        return null;
    }

}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<div class="topbar">
    @if (@User.Identity.IsAuthenticated)
    {
        <p class="welcometext">Welcome, <span class="name">@User.Identity.Name </span> &#124 <a href="/Home/Logout">Logout</a></p>

    }
    @if (!@User.Identity.IsAuthenticated)
    {
        <div class="welcometext">
            <a href="/Home/Login">Login</a>
        </div>
    }

</div>
<div class="question-header">

    <h1>The Rumour Mill</h1>

    <br />
    Have a question you've heard that you think needs answered? Submit it here.
    <form action="~/Home/Save" method="POST">
        <textarea type="text" placeholder="Enter your question here" name="questionText"></textarea> <br />
        <button type="submit" class="buttonNew btn-1 btn-1a" value="Submit">SUBMIT</button>
    </form>
</div>


<div class="cta filter" style="text-align: center;">

    @if ((@User.IsInRole("Moderator") || @User.IsInRole("SuperAdmin")))
    {
        <a class="unmoderated buttonNew btn-1 btn-1a" data-filter="Submitted" href="#" role="button">Unmoderated</a>
        <a class="approved buttonNew btn-1 btn-1a" data-filter="Approved" href="#" role="button">Approved</a>
        <a class="rejected buttonNew btn-1 btn-1a" data-filter="Rejected" href="#" role="button">Rejected</a>
    }
    else
    {

        <a class="all buttonNew btn-1 btn-1a active" data-filter="all" href="#" role="button">Show All</a>
        <a class="unanswered buttonNew btn-1 btn-1a" data-filter="Unanswered" href="#" role="button">Unanswered</a>
        <a class="answered buttonNew btn-1 btn-1a" data-filter="Answered" href="#" role="button">Answered</a>
    }
</div>

<div class="container body-content">

    @for (int i = 0, p = 0; i < Model[0].questionCount.Count; i++)
    {
        //q += Model[0].questionCount[i];
        //if (Model[0].questionCount[i] > 1)
        //{

        //    int hold = Model[0].questionCount[p];
        //    p += hold - 1;
        //}


        if (@Model[0].qrvmodel[p].Status == "Approved" || (@User.IsInRole("Moderator") || @User.IsInRole("SuperAdmin")))
        {
            <section class="cd-timeline js-cd-timeline">
                <div class="cd-timeline__container">
                    <div class="cd-timeline__block js-cd-block">
                        <div class="cd-timeline__img cd-timeline__img--movie js-cd-img">
                            <img src="../Content/question.svg" alt="Question">
                        </div>

                        @if ((@Model[0].qrvmodel[p].Status == "Approved") && (@User.IsInRole("Moderator") || @User.IsInRole("SuperAdmin")))
                        {
                            @Html.Raw("<div class='cd-timeline__content-approved cd-timeline__content js-cd-content'>")
                        }
                        else if ((@Model[0].qrvmodel[p].Status == "Rejected") && (@User.IsInRole("Moderator") || @User.IsInRole("SuperAdmin")))
                        {
                            @Html.Raw("<div class='cd-timeline__content-rejected cd-timeline__content js-cd-content'>")
                        }
                        else if ((@Model[0].qrvmodel[p].Status == "Submitted") && (@User.IsInRole("Moderator") || @User.IsInRole("SuperAdmin")))
                        {
                            @Html.Raw("<div class='cd-timeline__content-submitted cd-timeline__content js-cd-content'>")
                        }
                        else
                        {
                            @Html.Raw("<div class='cd-timeline__content js-cd-content'>")
                        }

                        <p class="innertext">
                            @Model[0].qrvmodel[p].QuestionText
                        </p>

                        <span class="cd-timeline__date">@GetPrettyDate(@Model[0].qrvmodel[p].TimeAsked)</span>

                        @if (@User.IsInRole("Leader") || @User.IsInRole("SuperAdmin"))
                        {
                            <form action="~/Home/SaveReply" method="POST">
                                <textarea type="text" placeholder="Enter your reply here" class="replyTextArea" name="replyText"></textarea> <br />
                                <input type="hidden" name="fk_QuestionId" value="@Model[0].qrvmodel[p].QuestionId" />
                                <input type="hidden" name="fk_LeaderId" value="@User.Identity.GetUserId()" />
                                <button type="submit" class="submit buttonNew btn-1 btn-1a" value="Submit">SUBMIT REPLY</button>
                            </form>
                        }
                        @if (@User.IsInRole("Moderator") || @User.IsInRole("SuperAdmin"))
                        {
                            <form action="~/Home/AcceptQuestion" class="buttons" method="POST">
                                <input type="hidden" name="fk_QuestionId" value="@Model[0].qrvmodel[p].QuestionId" />
                                <input type="hidden" name="IsApproved" value="True" />
                                <button type="submit" class="approve buttonNew btn-1 btn-1a" value="Submit">APPROVE</button>
                            </form>
                        }
                        @if (@User.IsInRole("Moderator") || @User.IsInRole("SuperAdmin"))
                        {
                            <form action="~/Home/RejectQuestion" class="buttons" method="POST">
                                <input type="hidden" name="fk_QuestionId" value="@Model[0].qrvmodel[p].QuestionId" />
                                <input type="hidden" name="IsApproved" value="False" />
                                <button type="submit" class="reject buttonNew btn-1 btn-1a" value="Submit">REJECT</button>
                            </form>
                        }
                        @if (@User.IsInRole("Moderator") || @User.IsInRole("SuperAdmin") && @Model[0].qrvmodel[p].Status != "Approved")
                        {
                                <form action="~/Home/EditQuestion" class="buttons" method="POST">
                                    <input type="hidden" name="questionId" value="@Model[0].qrvmodel[p].QuestionId" />
                                    <input type="hidden" name="IsApproved" value="True" />
                                    <input type="hidden" name="user" value="@User.Identity.Name" />
                                    <input type="hidden" name="oldText" value="@Model[0].qrvmodel[p].QuestionText" />
                                    <br />
                                    <textarea type="text" value="@Model[0].qrvmodel[p].QuestionText" name="editText"></textarea> <br />
                                    <input type="text" placeholder="Enter your reason here" name="reason" />
                                    <button type="submit" class="approve buttonNew btn-1 btn-1a" value="Submit">Edit and Approve</button>
                                </form>
                        }
                        <div id="blank"></div>
                    </div>
                    @Html.Raw("</div>")<!-- Question -->
                    @if (Model[0].qrvmodel[p].IsAnswered)
                    {
                        //int jHold=0;

                        for (int j = Model[0].questionCount[i] - 1; j >= 0; j--)
                        {
                            <div class="cd-timeline__block js-cd-block timeline-reply">

                                <div class="cd-timeline__img cd-timeline__img--movie js-cd-img reply-img" style="background-image:url(../Content/@Model[0].qrvmodel[p+j].Image)">

                                </div>

                                <div class="leadername">
                                    @Model[0].qrvmodel[p + j].LeaderName
                                </div>
                                <div class="cd-timeline__content reply-frame">

                                    <p class="innertext reply-align">
                                        @Model[0].qrvmodel[p + j].ReplyText
                                    </p>
                                    <span class="cd-timeline__date reply-align"> @GetPrettyDate(Model[0].qrvmodel[p + j].TimeReplied)</span>
                                </div> <!-- cd-timeline__content -->
                            </div> <!-- Reply -->
                        }
                        //jHold += j;
                        // i = i + Model[0].questionCount[i] - 1;
                        // continue;

                    }
                </div>
            </section> <!-- cd-timeline -->

        }

        if (Model[0].questionCount[i] == 0)
        {
            p++;
        }
        else
        {
            p = p + Model[0].questionCount[i];
        }

    }
</div>
<script>
    //$("#editButton").click(function () {
    //    $("#editQuestion").show();
    //});


</script>
